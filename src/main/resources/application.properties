# App and Server
spring.application.name=demo
server.port=8080

# Kafka Config
spring.kafka.bootstrap-servers=localhost:9092
kafka.topics.employee=employee-topic
kafka.topics.employee.dlq=employee-topic-dlq

# Kafka Producer Settings
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=1
spring.kafka.producer.retries=1
spring.kafka.producer.properties.linger.ms=10
spring.kafka.producer.properties.max.block.ms=1000
spring.kafka.producer.properties.delivery.timeout.ms=2000
spring.kafka.producer.properties.request.timeout.ms=1000
spring.kafka.producer.properties.metadata.max.age.ms=30000
spring.kafka.producer.properties.retry.backoff.ms=500

# Kafka Consumer Settings
spring.kafka.consumer.group-id=employee-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Resilience4j Circuit Breaker Config (Producer)
resilience4j.circuitbreaker.instances.employeeCB.register-health-indicator=true
resilience4j.circuitbreaker.instances.employeeCB.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.employeeCB.sliding-window-size=3
resilience4j.circuitbreaker.instances.employeeCB.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.employeeCB.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.employeeCB.wait-duration-in-open-state=5000
resilience4j.circuitbreaker.instances.employeeCB.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.instances.employeeCB.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.employeeCB.record-exceptions=org.apache.kafka.common.errors.TimeoutException,org.apache.kafka.common.KafkaException,org.springframework.kafka.KafkaException,java.util.concurrent.CompletionException

# Circuit Breaker Config (Consumer)
resilience4j.circuitbreaker.instances.employeeConsumerCB.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.employeeConsumerCB.sliding-window-size=5
resilience4j.circuitbreaker.instances.employeeConsumerCB.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.employeeConsumerCB.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.employeeConsumerCB.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.employeeConsumerCB.record-exceptions=org.springframework.kafka.KafkaException,java.lang.Exception

# Actuator Health & Monitoring
#adding line for testing
#adding logs
#adding other changes for kafka
#adding rebase command
# adding lastet changes into main
management.endpoints.web.exposure.include=health,info,circuitbreakers
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# Logging
logging.level.io.github.resilience4j=DEBUG
logging.level.org.apache.kafka=WARN
logging.level.org.springframework.kafka=DEBUG
logging.level.com.kafka=DEBUG
